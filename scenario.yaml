heat_template_version: 2017-02-24
description: Plantilla para definir el escenario en Openstack practica final CNVR

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for the serversX
  
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: cirros-0.3.4-x86_64-vnx
    constraints:
      - allowed_values: [cirros-0.3.4-x86_64-vnx, xenial-server-cloudimg-amd64-vnx]
        description: >
          Value must be one of cirros-0.3.4-x86_64-vnx or
          xenial-server-cloudimg-amd64-vnx.

resources:
  key_pair:
    type: 'OS::Nova::KeyPair'
    properties:
      name: { get_param: key_name }
      save_private_key: true
  net1:
    type: 'OS::Neutron::Net'
    properties:
      name: net1
  subnet1:
    type: 'OS::Neutron::Subnet'
    properties:
      name: subnet1
      network: { get_resource: net1 }
      cidr: 10.1.1.0/24
      allocation_pools: [{start: 10.1.1.8, end: 10.1.1.100}]
      gateway_ip: 10.1.1.1
      dns_nameservers: [8.8.8.8]
  net2:
    type: 'OS::Neutron::Net'
    properties:
      name: net2
  subnet2:
    type: 'OS::Neutron::Subnet'
    properties:
      name: subnet2
      network: { get_resource: net2 }
      cidr: 10.1.2.0/24
      allocation_pools: [{start: 10.1.2.8, end: 10.1.2.100}] 
  router:
    type: 'OS::Neutron::Router'
    properties:
      name: r0
      external_gateway_info:
        network: ExtNet
  router_interface:
    type: 'OS::Neutron::RouterInterface'
    properties:
      router: { get_resource: router }
      subnet: { get_resource: subnet1 }
  s1_port1:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net1 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet1 }
        #- ip_address: 10.100.0.10
  s1_port2:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net2 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet2 }
  s1:
    type: 'OS::Nova::Server'
    properties:
      name: s1
      image: cirros-0.3.4-x86_64-vnx
      flavor: m1.tiny
      key_name: { get_resource: key_name }
      networks:
        - port: { get_resource: s1_port1 }
        - port: { get_resource: s1_port2 }
  s2_port1:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net1 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet1 }
        #- ip_address: 10.100.0.10
  s2_port2:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net2 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet2 }
  s2:
    type: 'OS::Nova::Server'
    properties:
      name: s2
      image: cirros-0.3.4-x86_64-vnx
      flavor: m1.tiny
      key_name: { get_resource: key_name }
      networks:
        - port: { get_resource: s2_port1 }
        - port: { get_resource: s2_port2 }
  s3_port1:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net1 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet1 }
        #- ip_address: 10.100.0.10
  s3_port2:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net2 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet2 }
  s3:
    type: 'OS::Nova::Server'
    properties:
      name: s3
      image: cirros-0.3.4-x86_64-vnx
      flavor: m1.tiny
      key_name: { get_resource: key_name }
      networks:
        - port: { get_resource: s3_port1 }
        - port: { get_resource: s3_port2 }
  s_admin_port1:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net1 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet1 }
        #- ip_address: 10.100.0.10
  s_admin_port2:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net2 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet2 }
  s_admin_floating_ip:
    type: 'OS::Neutron::FloatingIP'
    properties:
      floating_network: ExtNet
      port_id: { get_resource: s_admin_port1}
  s_admin:
    type: 'OS::Nova::Server'
    properties:
      name: s_admin
      image: { get_param: image_id }
      flavor: m1.tiny
      key_name: { get_resource: key_name }
      networks:
        - port: { get_resource: s_admin_port1 }
        - port: { get_resource: s_admin_port2 }
  bbdd_port2:
    type: 'OS::Neutron::Port'
    properties:
      network: { get_resource: net2 }
      security_groups:
        - default (open)
        - { get_resource: web_secgroup }
      fixed_ips:
        - subnet_id: { get_resource: subnet2 }
  bbdd:
    type: 'OS::Nova::Server'
    properties:
      name: bbdd
      image: cirros-0.3.4-x86_64-vnx
      flavor: m1.tiny
      key_name: { get_resource: key_name }
      networks:
        - port: { get_resource: bbdd_port2 }






  web_secgroup:
    type: 'OS::Neutron::SecurityGroup'
    properties:
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 22
          port_range_max: 22
        - protocol: icmp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 0
          port_range_max: 0




outputs:
  s_admin_floating_ip:
    description: ADMIN SERVER FLOATING IP
    value: { get_attr: [ s_admin_floating_ip, floating_ip_address ] }
  s_admin_private_ip_net1:
    description: ADMIN SERVER PRIVATE IP NET1
    value: { get_attr: [ s_admin, networks, net1, 0 ] }
  s_admin_private_ip_net2:
    description: ADMIN SERVER PRIVATE IP NET2
    value: { get_attr: [ s_admin, networks, net2, 0 ] }

  instance_private_ip:
    description: The IP address of the deployed instance
    value: { get_attr:[s1, first_address] }
  instance_public_ip:
    description: Floating IP address of server1
    value: { get_attr:[floating_ip, floating_ip_address] }

  vm2_private_ip:
        description: Private IP address of vm2
        value: { get_attr: [ vm2, first_address ] }
  vm2_public_ip:
        description: Floating IP address of vm2
        value: { get_attr: [ vm2_floating_ip, floating_ip_address ] }